spring:
  application:
    name: okto-order-service
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8180/auth/realms/okto-microservices-realm
  datasource:
    url: jdbc:postgresql://localhost:5432/okto_dev
  jpa:
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
    hibernate:
      ddl-auto: update
    show-sql: true
    database: POSTGRESQL
    generate-ddl: true
  cloud:
    config:
      uri: http://localhost:8888
    vault:
      host: localhost
      port: 8200
      scheme: http
      authentication: TOKEN
      token: s.jo9iWFfBUG2FlShk8aip2bvV
      application-name: okto-order-service
    loadbalancer:
      ribbon:
        enabled: 'false'
    stream:
      bindings:
        notificationEventSupplier-out-0:
          destination: notification-events
      source: notificationEventSupplier
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

management:
  endpoints:
    web:
      exposure:
        include: '*'

eureka:
  instance:
    instance-id: ${spring.application.name}:${random.uuid}

server:
  port: 0