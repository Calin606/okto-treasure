spring:
  application:
    name: okto-api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: 'true'
          lower-case-service-id: 'true'
      routes[0]:
        id: okto-product-service
        uri: lb://okto-product-service # porturile nu sunt fixe
        predicates[0]: Path=/api/product #cand un client face un request aici prin api gateway va fi redirectat la product service
      routes[1]:
        id: okto-order-service
        predicates[0]: Path=/api/order
        uri: lb://okto-order-service
#      default-filters: TokenRelay
    loadbalancer:
      ribbon:
        enabled: 'false'
  security:
    oauth2:
#      client:
#        provider:
#          keycloak:
#            issuer-uri: http://localhost:8180/auth/realms/okto-microservices-realm
#        registration:
#          spring-cloud-gateway-client:
#            client-secret: 2bc2e89f-6408-432b-afde-f32758eb3580
#            client-id: spring-cloud-gateway-client
#            provider: keycloak
#            authorization-grant-type: authorization_code
#            redirect-uri: http://localhost:8080/login/oauth2/code/spring-cloud-gateway-client
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8180/auth/realms/okto-microservices-realm
#          jwk-set-uri: http://localhost:8180/auth/realms/okto-microservices-realm/protocol/openid-connect/certs

eureka:
  instance:
    instance-id: ${spring.application.name}-${random.uuid}